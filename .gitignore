# Generated by Cargo
/target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# IDE specific files
.idea/
.vscode/
*.swp
*.swo
.DS_Store

# Environment files
.env
.env.local
.env.*.local

# Log files
*.log

# Test coverage
coverage/
*.profraw

# Documentation
/doc/
/docs/

# Temporary files
*.tmp
*.temp
tmp/
temp/

# Build artifacts
*.o
*.so
*.dylib
*.dll
*.exe

# Debug files
*.dSYM/
*.pdb

# Dependencies
/vendor/
/node_modules/

# System Files
.DS_Store
Thumbs.db 
ANALIZ.md
COMPARISON.md
helix-project.md

/attached_assets

.replit

# Project specific
/data/
/logs/
*.db
*.db-*
*.sqlite
*.sqlite3

# Environment and secrets
.env.*
*.pem
*.key
*.crt
secrets/
config/local.toml
config/production.toml

# Build artifacts
/dist/
/build/
*.o
*.so
*.dylib
*.dll

# Test coverage
/coverage/
*.profraw

# Temporary files
*.bak
*.swp
*~

# Blockchain specific
/chaindata/
/keystore/
/genesis.json
/validator-keys/
/delegation-keys/
/consensus-keys/

# Documentation
/docs/_build/
/site/

# Dependencies
/node_modules/
/.cargo/
/.rustup/

# System files
.DS_Store
Thumbs.db
desktop.ini

# Backup files
*.bak
*.backup
*~

# Log files
npm-debug.log*
yarn-debug.log*
yarn-error.log*
*.log.*

# Cache directories
.cache/
.npm/
.yarn/
.parcel-cache/

# Local development
*.local
local.*
dev.*

.replit